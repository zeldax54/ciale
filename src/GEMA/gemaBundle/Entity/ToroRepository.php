<?php

namespace GEMA\gemaBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use Symfony\Component\HttpFoundation\Request;

/**
 * ToroRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ToroRepository extends EntityRepository
{
    public function listarDQL() {

        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb->addSelect('T')
            ->from($this->getClassName(), 'T')

        ;
        return $qb;
    }

    public function filtrar(Request $request) {
        $qb = new QueryBuilder($this->getEntityManager());
        $qb
            ->select("T","R","TR")
            ->from($this->getClassName(), "T")
            ->leftJoin("T.raza", "R")
             ->leftJoin("R.tiporaza", "TR")

        ;


        if ($request->request->get("searchPhrase") != null) {
            $search = $request->request->get("searchPhrase");
            $qb->where($qb->expr()->like("T.nombre", $qb->expr()->literal("%" . $search . "%")))
            ->orWhere($qb->expr()->like("T.apodo", $qb->expr()->literal("%" . $search . "%")))
            ->orWhere($qb->expr()->like("R.nombre", $qb->expr()->literal("%" . $search . "%")))
            ->orWhere($qb->expr()->like("TR.tipo", $qb->expr()->literal("%" . $search . "%")))

            ;

        }
        if ($request->request->get("sort") != null) {
            $orden = $request->request->get("sort");
            foreach ($orden as $key => $value) {
                $qb->orderBy("B." . $key, $value);
            }
        }
        return $qb;
    }

    public function torosByRazaName($nombre) {
        $qb = new QueryBuilder($this->getEntityManager());
        $qb
            ->select("A","R")
            ->from($this->getClassName(), "A")
            ->leftJoin('A.raza', "R")
            ->where("R.nombre='".$nombre."'");
               $qb->orderBy('A.apodo',"ASC");
        return $qb->getQuery()->getResult();
    }

    public function torosfullseach($dato) {
        $qb = new QueryBuilder($this->getEntityManager());
        $qb
            ->select("R")
            ->from($this->getClassName(), "R")
            ->where("R.nombre='".$dato."'")
            ->orWhere("R.padre='".$dato."'")
            ->orWhere("R.padremadre='".$dato."'")
            ->orWhere("R.apodo='".$dato."'")
        ;
        return $qb->getQuery()->getResult();
    }

    public function torosbyLike($dato){
        $qb = new QueryBuilder($this->getEntityManager());
        $qb
            ->select("T","R")
            ->from($this->getClassName(), "T")
            ->leftJoin('T.raza', "R")
            ->where("T.nombre like '%".$dato."%'")
            ->orWhere("T.padre like '%".$dato."%'")
            ->orWhere("T.padremadre like '%".$dato."%'")
            ->orWhere("T.apodo like '%".$dato."%'")
            ->orWhere("R.nombre like '%".$dato."%'")
        ;
        return $qb->getQuery()->getResult();

    }



    public function torosbyRazas($razas){
        $qb = new QueryBuilder($this->getEntityManager());
        $qb
            ->select("A","R")
            ->from($this->getClassName(), "A")
            ->leftJoin('A.raza', "R");

        foreach($razas as $r)
        {
            $qb->orWhere("R.id='".$r->getId()."'");
        }
        $qb->orderBy('A.apodo',"ASC");
        return $qb->getQuery()->getResult();

    }


//
//    public function torosbyTabla($tablaid){
//        $em = $this->getDoctrine()->getManager();
//        return null;
//
//    }
}
