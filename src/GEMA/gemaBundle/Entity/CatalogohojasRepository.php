<?php

namespace GEMA\gemaBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use Symfony\Component\HttpFoundation\Request;

/**
 * CatalogohojasRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CatalogohojasRepository extends EntityRepository
{
    public function listarDQL() {

        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb->addSelect('U','F')
            ->from($this->getClassName(), 'U');

        return $qb;
    }


    public function filtrar(Request $request) {
        $qb = new QueryBuilder($this->getEntityManager());
        $qb
            ->select("B","F")
            ->from($this->getClassName(), "B")
            ->leftJoin("B.catalogo", "F");


        if ($request->request->get("searchPhrase") != null) {
            $search = $request->request->get("searchPhrase");
            $qb->where($qb->expr()->like("B.catalogo", $qb->expr()->literal("%" . $search . "%")));
            $qb->where($qb->expr()->like("B.tipo", $qb->expr()->literal("%" . $search . "%")));
            $qb->where($qb->expr()->like("F.titulo", $qb->expr()->literal("%" . $search . "%")));
            $qb->where($qb->expr()->like("B.numero", $qb->expr()->literal("%" . $search . "%")));



        }
        if ($request->request->get("sort") != null) {
            $orden = $request->request->get("sort");
            foreach ($orden as $key => $value) {
                $qb->orderBy("B." . $key, $value);
            }
        }
        return $qb;
    }

    public function Ordered(){

        $qb = new QueryBuilder($this->getEntityManager());
        $qb
            ->select("B","F")
            ->from($this->getClassName(), "B")
            ->leftJoin("B.catalogo", "F")
            ->orderBy("B.numero", 'ASC')
            ;
            return $qb->getQuery()->getResult();



    }

    public function OrderedbyParent($id){

        $qb = new QueryBuilder($this->getEntityManager());
        $qb
            ->select("B","F")
            ->from($this->getClassName(), "B")
            ->leftJoin("B.catalogo", "F")
            ->where("F.id=".$id)
            ->orderBy("B.numero", 'ASC');
            return $qb->getQuery()->getResult();
    }

}
